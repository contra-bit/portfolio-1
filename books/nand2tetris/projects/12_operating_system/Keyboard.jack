/**
 * A library for handling user input from the keyboard.
 */

class Keyboard{

	static int keyboardAddress;

	/**
	 * Initializes the keyboard.
	 */
	function void init(){
		let keyboardAddress = 24576;
		return;
	}

	/**
	 * Returns the ASCII code (as char) of the currently pressed key,
	 * or 0 if no key is currently pressed.
	 * Recognizes all ASCII characters, as well as the following extension
	 * of action keys:
	 * New line = 128 = String.newline()
	 * Backspace = 129 = String.backspace()
	 * Left Arrow = 130
	 * Up Arrow = 131
	 * Right Arrow = 132
	 * Down Arrow = 133
	 * Home = 134
	 * End = 135
	 * Page Up = 136
	 * Page Down = 137
	 * Insert = 138
	 * Delete = 139
	 * ESC = 140
	 * F1 - F12 = 141 - 152
	 */
	function char keyPressed(){
		return Memory.peek(keyboardAddress);
	}

	/**
	 * Reads the next character from the keyboard.
	 * waits until a key is pressed and then released, then echoes
	 * the key to the screen, and returns the value of the pressed key.
	 */
	function char readChar(){
		var char keyVal;
		let keyVal = Keyboard.keyPressed();
		while(~keyVal){
			let keyVal = Keyboard.keyPressed();
		}

		while(Keyboard.keyPressed() = keyVal){}
		do Output.printChar(keyVal);
		return keyVal;
	}

	/**
	 * Prints the message on the screen, reads the next line
	 * (until a newline character) from the keyboard, and returns its value.
	 */
	function String readLine(String message){
		var String line;
		var char nextChar;

		do Output.printString(message);
		let line = String.new(64);
		while(true){
			let nextChar = Keyboard.readChar();
			if(nextChar = String.newLine()){
				return line;
			}
			if(nextChar = String.backSpace()){
				do Output.backSpace();
				do line.eraseLastChar();
			}
			else {
				do line.appendChar(nextChar);
			}
		}

		return "ERROR.";
	}

	/**
	 * Prints the message on the screen, reads the next line
	 * (until a newline character) from the keyboard, and returns its
	 * integer value (until the first non numeric character).
	 */
	function int readInt(String message){
		var String input;
		var int value;
		let input = Keyboard.readLine(message);
		let value = input.intValue();
		do input.dispose();
		return value;
	}
}
